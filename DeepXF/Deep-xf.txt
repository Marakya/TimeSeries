DeepXF: Explainable Forecasting and Nowcasting with State-of-the-art Deep Neural Networks and Dynamic Factor Model
Also, verify TS signal similarities and Filtering of TS signals with single line of code at ease
deep-xf

pypi: https://pypi.org/project/deep_xf

images/logo.png

Related Blog: https://towardsdatascience.com/interpretable-nowcasting-with-deepxf-using-minimal-code-6b16a76ca52f

Related Blog: https://medium.com/analytics-vidhya/building-explainable-forecasting-models-with-state-of-the-art-deep-neural-networks-using-a-ad3fa5844fef

Related Blog: https://towardsdatascience.com/learning-similarities-between-biomedical-signals-with-deep-siamese-network-7684648e2ba0

Related Blog: https://ajay-arunachalam08.medium.com/denoising-ecg-signals-with-ensemble-of-filters-65919d15afe9

About deep-xf
DeepXF is an open source, low-code python library for forecasting and nowcasting tasks. DeepXF helps in designing complex forecasting and nowcasting models with built-in utility for time series data. One can automatically build interpretable deep forecasting and nowcasting models at ease with this simple, easy-to-use and low-code solution. It enables users to perform end-to-end Proof-Of-Concept (POC) quickly and efficiently. One can build models based on deep neural network such as Recurrent Neural Network (RNN), Long Short Term Memory (LSTM), Gated Recurrent Unit (GRU), Bidirectional RNN/LSTM/GRU (BiRNN/BiLSTM/BiGRU), Spiking Neural Network (SNN), Graph Neural Network (GNN), Transformers, Generative Adversarial Network (GAN), Convolutional Neural Network (CNN), and others. It also provides facility to build nowcast model using Dynamic Factor Model.

images/representation.png

DeepXF is conceived and developed by Ajay Arunachalam - https://www.linkedin.com/in/ajay-arunachalam-4744581a/

Please Note:- This is still by large a work in progress, so always open to your comments and things you feel to be included. Also, if you want to be a contributor, you are always most welcome. The RNN/LSTM/GRU/BiRNN/BiLSTM/BiGRU are already part of the initial version roll-out, while the latter ones (SNN, GNN, Transformers, GAN, CNN, etc.) are work in progress, and will be added soon once the testing is completed.

The library provides (not limited too):-
Exploratory Data Analysis with services like profiling, filtering outliers, univariate/multivariate plots, plotly interactive plots, rolling window plots, detecting peaks, etc.
Data Preprocessing for Time-series data with services like finding missing, imputing missing, date-time extraction, single timestamp generation, removing unwanted features, etc.
Descriptive statistics for the provided time-series data, Normality evaluation, etc.
Feature engineering with services like generating time lags, date-time features, one-hot encoding, date-time cyclic features, etc.
Finding similarity between homogeneous time-series inputs with Siamese Neural Networks.
Denoising time-series input signals.
Building Deep Forecasting Model with hyperparameters tuning and leveraging available computational resource (CPU/GPU).
Forecasting model performance evaluation with several key metrics
Game theory based method to interpret forecasting model results.
Building Nowcasting model with Expectationâ€“maximization algorithm
Explainable Nowcasting
Who can use deep-xf?
DeepXF is an open-source library ideal for:-

Citizen Data Scientists who prefer a low code solution.
Experienced Data Scientists who want to increase model accuracy and improve productivity.
Data Science Professionals and Consultants involved in building proof-of-concept (poc) projects.
Researchers for quick poc prototyping and testing.
Students and Teachers.
ML Enthusiasts.
Learners.
Requirements
Python 3.6.x
torch[>=1.4.0]
NumPy[>=1.9.0]
SciPy[>=0.14.0]
Scikit-learn[>=0.16]
statsmodels[0.12.2]
Pandas[>=0.23.0]
Matplotlib
Seaborn[0.9.0]
plotly[5.10.0]
tqdm
shap
keras[2.6.0]
pandas_profiling[3.1.0]
py-ecg-detectors
